name: develop

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.2.0
        with:
          ssh-private-key: ${{ secrets.id_rsa_short }}

      - name: npm install, build, and test
        run: |
          npm ci
          npm run build --if-present
        env:
          CI: true

      - name: zip files
        run: zip -r develop.zip www

      - name: Get develop Release status
        id: develop_status
        run: |
          STATUS=`curl -s -o /dev/null -w '%{http_code}' "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/develop"`
          echo "::set-output name=status::${STATUS}"

      - name: Get develop Release info
        if: steps.develop_status.outputs.status == 200
        id: develop_tag
        uses: octokit/request-action@v1.x
        with:
          route: GET /repos/:repository/releases/tags/develop
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse develop Release info
        if: steps.develop_status.outputs.status == 200
        id: develop_data
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.develop_tag.outputs.data }}
          id: "id"

      - name: Delete develop Release
        if: steps.develop_status.outputs.status == 200
        uses: octokit/request-action@v1.x
        with:
          route: DELETE /repos/:repository/releases/:id
          repository: ${{ github.repository }}
          id: ${{ steps.develop_data.outputs.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create develop Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: develop
          release_name: develop
          prerelease: true

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./develop.zip
          asset_name: develop.zip
          asset_content_type: application/zip
